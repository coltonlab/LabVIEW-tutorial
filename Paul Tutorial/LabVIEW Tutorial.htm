<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>LabView Tutorial</title>
</head>

<body>

<p align="center"><b><u><font size="5">LabView Tutorial</font></u></b></p>
<hr>
<ol>
  <li>
  <p align="left"><a href="#LabView Basics">LabView Basics</a></li>
  <li>
  <p align="left"><a href="#The Front Panel">The Front Panel</a><ol>
    <li>
    <p align="left"><a href="#Creating the Program Interface">Creating the 
    Program Interface</a></li>
    <li>
    <p align="left"><a href="#Running the Program">Running the Program</a></li>
  </ol>
  </li>
  <li>
  <p align="left"><a href="#The Block Diagram">The Block Diagram</a><ol>
    <li>
    <p align="left"><a href="#Creating Objects">Creating Objects</a></li>
    <li>
    <p align="left"><a href="#Connecting Objects">Connecting Objects</a></li>
  </ol>
  </li>
  <li>
  <p align="left"><a href="#Learning More">Learning More</a></li>
</ol>
<hr>
<p align="left"><b><font size="4"><a name="LabView Basics">LabView Basics</a></font></b></p>
<p align="left">LabView is an exclusively graphical programming language which 
combines the ideas of a customizable user-interface, the front panel, and a graphic layout, the block diagram, in order to create virtual instruments 
(VI's), or programs.&nbsp; </p>
<hr>
<p align="left"><font size="4"><b><a name="The Front Panel">The Front Panel</a></b></font></p>
<p align="left">The front panel is the interface seen by the user of the 
program.&nbsp; It contains both controls and indicators.&nbsp; The controls 
allow the user to input or adjust various types of data used by the VI.&nbsp; 
Many of the controls are essentially images of their real-world counterparts.&nbsp; 
Thus, many of them act accordingly.&nbsp; For example, rotary knobs rotate and 
switches flip states.&nbsp; There are also various types of input fields in 
which data can be entered.&nbsp; The indicators 
display various types of output from the VI.&nbsp; This can be done using lights, meters, 
graphs, text fields, etc.&nbsp; Like the controls, the indicators are often 
images of real-world counterparts such as lights and panel meters.&nbsp; Indicators 
may also be designed more for charting or displaying information, such as the 
graphing indicator.&nbsp; </p>
<blockquote>
  <p align="left"><b><a name="Creating the Program Interface">Creating the 
  Program Interface</a></b></p>
  <p align="left">To create a control or indicator, right-click anywhere on the 
  front panel window.&nbsp; This will bring up the controls menu.&nbsp; When you 
  hover your mouse over one of the icons on the controls menu, a submenu for 
  that icon will open up.&nbsp; From the various submenus you can select the 
  desired object.&nbsp; Once your object is selected, the menus will close, and 
  you can now place the object on the front panel by left-clicking when the 
  dashed outline is in the desired location.&nbsp; It is important to note that 
  at this point, the corresponding code for the object is automatically placed 
  on the block diagram.</p>
  <p align="left">Once your front panel has all the necessary controls and 
  indicators, it is important to arrange everything so that you have an 
  easy-to-use interface.&nbsp; If you want to align a particular group of 
  objects, first select the objects by either clicking and dragging over the 
  objects, or by holding the 'Shift' key and clicking on the objects 
  individually.&nbsp; Once your objects are selected, you can perform various 
  alignments by selecting from the drag-down menus located along the top of the 
  front panel. </p>
  <p align="left"><b><a name="Running the Program">Running the Program</a></b></p>
  <p align="left">Before running your program, it must be saved.&nbsp; To save 
  the program, select 'Save' from the File drop down menu.&nbsp; Select the 
  directory you want to save to, type in the desired file-name for your program, 
  and then click Save.&nbsp; Once saved, you can run your program by selecting 
  'Run' from the Operate drop down menu.&nbsp; You can also run your program by 
  clicking on the run icon located at the top left of the screen.&nbsp; </p>
</blockquote>
<hr>
<p align="left"><font size="4"><b><a name="The Block Diagram">The Block Diagram</a></b></font></p>
<p align="left">The block diagram is where all of the &quot;code&quot; is written, and it 
can be quite complex.&nbsp; Since LabView is a visual language, the code is 
represented visually by using objects and wires.&nbsp; </p>
<blockquote>
  <p align="left"><b><a name="Creating Objects">Creating Objects</a></b></p>
  <p align="left">Like the front panel, to create a object in the block diagram, 
  right-click anywhere on the block diagram window.&nbsp; This will bring up the 
  functions menu.&nbsp; Hover your mouse over one of the icons on the functions 
  menu to open a submenu for that particular icon.&nbsp; From the submenu, 
  select the desired object.&nbsp; Once selected, the object may be placed on 
  the block diagram by simply left-clicking where you want it placed.</p>
  <p align="left"><b><a name="Connecting Objects">Connecting Objects</a></b></p>
  <p align="left">In order to build a working VI, your objects from both the 
  block diagram and front panel must be able to communicate with each other.&nbsp; 
  For example, if you want a numeric input from the front panel to be plugged 
  into a function and then displayed on a numeric output, the input must be able 
  to communicate with the function, and the function with the output.&nbsp; To 
  achieve this, we must &quot;wire&quot; the objects together.&nbsp; To wire the 
  objects, you can select the wire tool from</p>
</blockquote>
<hr>
<p align="left"><font size="4"><b><a name="Learning More">Learning More</a></b></font></p>
<p align="left">There are several websites containing their own LabView manuals 
and tutorials.&nbsp; These sites are excellent for obtaining a better 
understanding of the LabView program.&nbsp; Also, these sites serve as a source 
of reference for many of the details of LabView not covered in this tutorial.</p>
<ol>
  <li>
<p align="left">This is a link to the official LabView manual created by 
National Instruments.&nbsp; It is very detailed and addresses everything you 
need to know about LabView, and more.<br>
<a href="http://www.ni.com/pdf/manuals/320999e.pdf">
http://www.ni.com/pdf/manuals/320999e.pdf</a></p>
  </li>
  <li>
<p align="left">Although outdated, this LabView tutorial is excellent at 
introducing the programming basics of LabView.&nbsp; It also contains 
programming exercise ideas to help teach the material.<br>
<a href="http://www.upscale.utoronto.ca/GeneralInterest/LabView.html">
http://www.upscale.utoronto.ca/GeneralInterest/LabView.html</a></p>
  </li>
  <li>
<p align="left">
This is a more up-to-date tutorial done in PowerPoint.&nbsp; It uses many screen 
captures and diagrams to help teach the material.<br>
<a href="http://www.cim.pw.edu.pl/labview/en/">
http://www.cim.pw.edu.pl/labview/en/</a></p>
  </li>
</ol>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="center">&nbsp;</p>

</body>

</html>